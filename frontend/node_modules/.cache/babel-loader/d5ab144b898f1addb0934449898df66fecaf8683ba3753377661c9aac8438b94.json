{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pimsupport\\\\Desktop\\\\Projects\\\\PROD\\\\InfoSec-Tools\\\\frontend\\\\src\\\\components\\\\AdminRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminRoute = () => {\n  _s();\n  const {\n    user,\n    loading\n  } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex h-screen items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-12 w-12 animate-spin rounded-full border-4 border-primary-600 border-t-transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If not admin, redirect to dashboard\n  if (!user || user.role !== 'admin') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render child routes\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(AdminRoute, \"EmJkapf7qiLC5Br5eCoEq4veZes=\", false, function () {\n  return [useAuth];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsxDEV","_jsxDEV","AdminRoute","_s","user","loading","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","to","_c","$RefreshReg$"],"sources":["C:/Users/pimsupport/Desktop/Projects/PROD/InfoSec-Tools/frontend/src/components/AdminRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext.tsx';\r\n\r\nconst AdminRoute: React.FC = () => {\r\n  const { user, loading } = useAuth();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex h-screen items-center justify-center\">\r\n        <div className=\"h-12 w-12 animate-spin rounded-full border-4 border-primary-600 border-t-transparent\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // If not admin, redirect to dashboard\r\n  if (!user || user.role !== 'admin') {\r\n    return <Navigate to=\"/dashboard\" />;\r\n  }\r\n\r\n  // Render child routes\r\n  return <Outlet />;\r\n};\r\n\r\nexport default AdminRoute; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGN,OAAO,CAAC,CAAC;;EAEnC;EACA,IAAIM,OAAO,EAAE;IACX,oBACEJ,OAAA;MAAKK,SAAS,EAAC,2CAA2C;MAAAC,QAAA,eACxDN,OAAA;QAAKK,SAAS,EAAC;MAAsF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzG,CAAC;EAEV;;EAEA;EACA,IAAI,CAACP,IAAI,IAAIA,IAAI,CAACQ,IAAI,KAAK,OAAO,EAAE;IAClC,oBAAOX,OAAA,CAACJ,QAAQ;MAACgB,EAAE,EAAC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACrC;;EAEA;EACA,oBAAOV,OAAA,CAACH,MAAM;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACR,EAAA,CAnBID,UAAoB;EAAA,QACEH,OAAO;AAAA;AAAAe,EAAA,GAD7BZ,UAAoB;AAqB1B,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}