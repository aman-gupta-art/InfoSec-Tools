{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext(undefined);export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState('light');// Initialize theme from localStorage or system preference\nuseEffect(()=>{// Get from localStorage\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){setTheme(savedTheme);}else{// Or set based on system preference\nif(window.matchMedia('(prefers-color-scheme: dark)').matches){setTheme('dark');}}},[]);// Apply theme class to document\nuseEffect(()=>{if(theme==='dark'){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[theme]);// Toggle theme\nconst toggleTheme=()=>{const newTheme=theme==='light'?'dark':'light';setTheme(newTheme);// Save to localStorage\nlocalStorage.setItem('theme',newTheme);};// Update user theme preference in database\nconst updateUserTheme=async(userId,newTheme)=>{try{const token=localStorage.getItem('token');if(token){await axios.post('/api/auth/update-theme',{theme:newTheme},{headers:{Authorization:\"Bearer \".concat(token)}});}}catch(error){console.error('Failed to update theme preference:',error);}};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme,updateUserTheme},children:children});};export const useTheme=()=>{const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","ThemeContext","undefined","ThemeProvider","_ref","children","theme","setTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","document","documentElement","classList","add","remove","toggleTheme","newTheme","setItem","updateUserTheme","userId","token","post","headers","Authorization","concat","error","console","Provider","value","useTheme","context","Error"],"sources":["C:/Users/pimsupport/Desktop/Projects/PROD/NEW_1/frontend/src/context/ThemeContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ntype ThemeType = 'light' | 'dark';\r\n\r\ninterface ThemeContextType {\r\n  theme: ThemeType;\r\n  toggleTheme: () => void;\r\n  updateUserTheme: (userId: number, theme: ThemeType) => Promise<void>;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const ThemeProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [theme, setTheme] = useState<ThemeType>('light');\r\n\r\n  // Initialize theme from localStorage or system preference\r\n  useEffect(() => {\r\n    // Get from localStorage\r\n    const savedTheme = localStorage.getItem('theme') as ThemeType | null;\r\n    if (savedTheme) {\r\n      setTheme(savedTheme);\r\n    } else {\r\n      // Or set based on system preference\r\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        setTheme('dark');\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Apply theme class to document\r\n  useEffect(() => {\r\n    if (theme === 'dark') {\r\n      document.documentElement.classList.add('dark');\r\n    } else {\r\n      document.documentElement.classList.remove('dark');\r\n    }\r\n  }, [theme]);\r\n\r\n  // Toggle theme\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    \r\n    // Save to localStorage\r\n    localStorage.setItem('theme', newTheme);\r\n  };\r\n\r\n  // Update user theme preference in database\r\n  const updateUserTheme = async (userId: number, newTheme: ThemeType) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        await axios.post('/api/auth/update-theme', {\r\n          theme: newTheme\r\n        }, {\r\n          headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update theme preference:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme, updateUserTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTheme = (): ThemeContextType => {\r\n  const context = useContext(ThemeContext);\r\n  if (context === undefined) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAU1B,KAAM,CAAAC,YAAY,cAAGP,aAAa,CAA+BQ,SAAS,CAAC,CAE3E,MAAO,MAAM,CAAAC,aAAsD,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACjF,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAY,OAAO,CAAC,CAEtD;AACAE,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAW,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAqB,CACpE,GAAIF,UAAU,CAAE,CACdD,QAAQ,CAACC,UAAU,CAAC,CACtB,CAAC,IAAM,CACL;AACA,GAAIG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAAE,CAC7DN,QAAQ,CAAC,MAAM,CAAC,CAClB,CACF,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACAV,SAAS,CAAC,IAAM,CACd,GAAIS,KAAK,GAAK,MAAM,CAAE,CACpBQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACF,CAAC,CAAE,CAACZ,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAa,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGd,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACrDC,QAAQ,CAACa,QAAQ,CAAC,CAElB;AACAX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAED,QAAQ,CAAC,CACzC,CAAC,CAED;AACA,KAAM,CAAAE,eAAe,CAAG,KAAAA,CAAOC,MAAc,CAAEH,QAAmB,GAAK,CACrE,GAAI,CACF,KAAM,CAAAI,KAAK,CAAGf,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIc,KAAK,CAAE,CACT,KAAM,CAAA1B,KAAK,CAAC2B,IAAI,CAAC,wBAAwB,CAAE,CACzCnB,KAAK,CAAEc,QACT,CAAC,CAAE,CACDM,OAAO,CAAE,CAAEC,aAAa,WAAAC,MAAA,CAAYJ,KAAK,CAAG,CAC9C,CAAC,CAAC,CACJ,CACF,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,CAAEA,KAAK,CAAC,CAC5D,CACF,CAAC,CAED,mBACE7B,IAAA,CAACC,YAAY,CAAC8B,QAAQ,EAACC,KAAK,CAAE,CAAE1B,KAAK,CAAEa,WAAW,CAAEG,eAAgB,CAAE,CAAAjB,QAAA,CACnEA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAA4B,QAAQ,CAAGA,CAAA,GAAwB,CAC9C,KAAM,CAAAC,OAAO,CAAGtC,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIiC,OAAO,GAAKhC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAiC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}