{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pimsupport\\\\Desktop\\\\Projects\\\\PROD\\\\InfoSec-Tools\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is authenticated on initial load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          // Set the token in axios default headers\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Fetch user profile\n          const response = await axios.get('/api/users/profile');\n          setUser(response.data);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          // If error, clear token\n          localStorage.removeItem('token');\n          setToken(null);\n          setUser(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n\n  // Log in user\n  const login = async (username, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        username,\n        password\n      });\n      const {\n        accessToken,\n        ...userData\n      } = response.data;\n\n      // Store token\n      localStorage.setItem('token', accessToken);\n      setToken(accessToken);\n\n      // Set user data\n      setUser(userData);\n\n      // Set the token in axios default headers\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      return Promise.resolve();\n    } catch (error) {\n      console.error('Login failed:', error);\n      return Promise.reject(error);\n    }\n  };\n\n  // Log out user\n  const logout = () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setToken(null);\n    setUser(null);\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    logout,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 10\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","checkAuth","defaults","headers","common","response","get","data","error","console","removeItem","login","username","password","post","accessToken","userData","setItem","Promise","resolve","reject","logout","isAdmin","role","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/pimsupport/Desktop/Projects/PROD/InfoSec-Tools/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  role: string;\r\n  uiTheme: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  token: string | null;\r\n  loading: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isAdmin: () => boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [token, setToken] = useState<string | null>(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is authenticated on initial load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          // Set the token in axios default headers\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Fetch user profile\r\n          const response = await axios.get('/api/users/profile');\r\n          setUser(response.data);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          // If error, clear token\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n          setUser(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  // Log in user\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      const { accessToken, ...userData } = response.data;\r\n      \r\n      // Store token\r\n      localStorage.setItem('token', accessToken);\r\n      setToken(accessToken);\r\n      \r\n      // Set user data\r\n      setUser(userData);\r\n      \r\n      // Set the token in axios default headers\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n\r\n      return Promise.resolve();\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      return Promise.reject(error);\r\n    }\r\n  };\r\n\r\n  // Log out user\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAdmin,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}